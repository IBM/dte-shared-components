function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

/**
 * Copyright IBM Corp. 2016, 2018
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */
import React from 'react';
import { action } from '@storybook/addon-actions';
import Button from '../../Button';
import DataTable, { Table, TableBody, TableCell, TableContainer, TableHead, TableHeader, TableRow, TableToolbar, TableToolbarAction, TableToolbarContent, TableToolbarSearch, TableToolbarMenu } from '..';
import { initialRows, headers } from './shared';

var ToolbarStory = function ToolbarStory(props) {
  return /*#__PURE__*/React.createElement(DataTable, _extends({
    rows: initialRows,
    headers: headers
  }, props, {
    render: function render(_ref) {
      var rows = _ref.rows,
          headers = _ref.headers,
          getHeaderProps = _ref.getHeaderProps,
          getRowProps = _ref.getRowProps,
          getTableProps = _ref.getTableProps,
          getToolbarProps = _ref.getToolbarProps,
          onInputChange = _ref.onInputChange,
          getTableContainerProps = _ref.getTableContainerProps;
      return /*#__PURE__*/React.createElement(TableContainer, _extends({
        title: "DataTable",
        description: "With toolbar"
      }, getTableContainerProps()), /*#__PURE__*/React.createElement(TableToolbar, _extends({}, getToolbarProps(), {
        "aria-label": "data table toolbar"
      }), /*#__PURE__*/React.createElement(TableToolbarContent, null, /*#__PURE__*/React.createElement(TableToolbarSearch, {
        onChange: onInputChange
      }), /*#__PURE__*/React.createElement(TableToolbarMenu, null, /*#__PURE__*/React.createElement(TableToolbarAction, {
        onClick: action('Action 1 Click'),
        primaryFocus: true
      }, "Action 1"), /*#__PURE__*/React.createElement(TableToolbarAction, {
        onClick: action('Action 2 Click')
      }, "Action 2"), /*#__PURE__*/React.createElement(TableToolbarAction, {
        onClick: action('Action 3 Click')
      }, "Action 3")), /*#__PURE__*/React.createElement(Button, {
        onClick: action('ButtonCLick')
      }, "Primary Button"))), /*#__PURE__*/React.createElement(Table, getTableProps(), /*#__PURE__*/React.createElement(TableHead, null, /*#__PURE__*/React.createElement(TableRow, null, headers.map(function (header, i) {
        return /*#__PURE__*/React.createElement(TableHeader, _extends({
          key: i
        }, getHeaderProps({
          header: header
        })), header.header);
      }))), /*#__PURE__*/React.createElement(TableBody, null, rows.map(function (row, i) {
        return /*#__PURE__*/React.createElement(TableRow, _extends({
          key: i
        }, getRowProps({
          row: row
        })), row.cells.map(function (cell) {
          return /*#__PURE__*/React.createElement(TableCell, {
            key: cell.id
          }, cell.value);
        }));
      }))));
    }
  }));
};

export default ToolbarStory;