"use strict";

var _react = _interopRequireDefault(require("react"));

var _react2 = require("@storybook/react");

var _addonActions = require("@storybook/addon-actions");

var _addonKnobs = require("@storybook/addon-knobs");

var _PaginationNav = _interopRequireDefault(require("../PaginationNav"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Copyright IBM Corp. 2020
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */
var props = function props() {
  return {
    loop: (0, _addonKnobs.boolean)('Allow user to loop through the items when reaching first / last (loop)', false),
    page: (0, _addonKnobs.number)('The current page (page)', 0),
    totalItems: (0, _addonKnobs.number)('Total number of items (totalItems)', 10),
    itemsShown: (0, _addonKnobs.number)('Number of items to be shown (minimum 4) (itemsShown)', 10),
    onChange: (0, _addonActions.action)('onChange')
  };
};

(0, _react2.storiesOf)('PaginationNav', module).addParameters({
  component: _PaginationNav.default
}).addDecorator(_addonKnobs.withKnobs).addDecorator(function (story) {
  return /*#__PURE__*/_react.default.createElement("div", {
    style: {
      width: '800px'
    }
  }, story());
}).add('PaginationNav', function () {
  return /*#__PURE__*/_react.default.createElement(_PaginationNav.default, props());
}, {
  info: {
    text: "\n        Pagination Nav is a group of pagination buttons.\n          "
  }
});