"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _jsonp = _interopRequireDefault(require("jsonp"));

/**
 * Copyright IBM Corp. 2020
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */

/**
 * @constant {string | string} Host for the profile status API call
 * @private
 */
var _host = process && process.env.PROFILE_HOST || 'https://idaas.iam.ibm.com';
/**
 * @constant {string | string} API version
 * @private
 */


var _version = process && process.env.PROFILE_VERSION || 'v1';
/**
 * Profile status endpoint
 *
 * @type {string}
 * @private
 */


var _endpoint = "".concat(_host, "/").concat(_version, "/mgmt/idaas/user/status/");
/**
 * Profile API class with methods for checking user authentication for ibm.com
 */


var ProfileAPI = /*#__PURE__*/function () {
  function ProfileAPI() {
    (0, _classCallCheck2.default)(this, ProfileAPI);
  }

  (0, _createClass2.default)(ProfileAPI, null, [{
    key: "getUserStatus",

    /**
     * Returns user status (authenticated or unauthenticated)
     *
     * @returns {Promise<any>} User status
     * @example
     * import { ProfileAPI } from '@carbon/ibmdotcom-services';
     *
     * async function getUserStatus() {
     *   const response = await ProfileAPI.getUserStatus();
     *   return response;
     * }
     */
    value: function getUserStatus() {
      var url = _endpoint;
      return new Promise(function (resolve, reject) {
        return (0, _jsonp.default)(url, null, function (err, data) {
          return err ? reject(err) : resolve(data);
        });
      });
    }
    /**
     * Monitors user status (authenticated or unauthenticated)
     *
     * @example
     * import { ProfileAPI } from '@carbon/ibmdotcom-services';
     *
     * function monitorUserStatus() {
     *   ProfileAPI.monitorUserStatus((err, status) => {
     *     console.log('The new login status:', status.user);
     *   });
     * }
     */

  }, {
    key: "monitorUserStatus",
    value: function monitorUserStatus(callback) {
      return (0, _jsonp.default)(_endpoint, null, callback);
    }
  }]);
  return ProfileAPI;
}();

var _default = ProfileAPI;
exports.default = _default;