"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(require("react"));

var _addonActions = require("@storybook/addon-actions");

var _Button = _interopRequireDefault(require("../../Button"));

var _ = _interopRequireWildcard(require(".."));

var _shared = require("./shared");

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

var ToolbarStory = function ToolbarStory(props) {
  return /*#__PURE__*/_react.default.createElement(_.default, _extends({
    rows: _shared.initialRows,
    headers: _shared.headers
  }, props, {
    render: function render(_ref) {
      var rows = _ref.rows,
          headers = _ref.headers,
          getHeaderProps = _ref.getHeaderProps,
          getRowProps = _ref.getRowProps,
          getTableProps = _ref.getTableProps,
          getToolbarProps = _ref.getToolbarProps,
          onInputChange = _ref.onInputChange,
          getTableContainerProps = _ref.getTableContainerProps;
      return /*#__PURE__*/_react.default.createElement(_.TableContainer, _extends({
        title: "DataTable",
        description: "With toolbar"
      }, getTableContainerProps()), /*#__PURE__*/_react.default.createElement(_.TableToolbar, _extends({}, getToolbarProps(), {
        "aria-label": "data table toolbar"
      }), /*#__PURE__*/_react.default.createElement(_.TableToolbarContent, null, /*#__PURE__*/_react.default.createElement(_.TableToolbarSearch, {
        onChange: onInputChange
      }), /*#__PURE__*/_react.default.createElement(_.TableToolbarMenu, null, /*#__PURE__*/_react.default.createElement(_.TableToolbarAction, {
        onClick: (0, _addonActions.action)('Action 1 Click'),
        primaryFocus: true
      }, "Action 1"), /*#__PURE__*/_react.default.createElement(_.TableToolbarAction, {
        onClick: (0, _addonActions.action)('Action 2 Click')
      }, "Action 2"), /*#__PURE__*/_react.default.createElement(_.TableToolbarAction, {
        onClick: (0, _addonActions.action)('Action 3 Click')
      }, "Action 3")), /*#__PURE__*/_react.default.createElement(_Button.default, {
        onClick: (0, _addonActions.action)('ButtonCLick')
      }, "Primary Button"))), /*#__PURE__*/_react.default.createElement(_.Table, getTableProps(), /*#__PURE__*/_react.default.createElement(_.TableHead, null, /*#__PURE__*/_react.default.createElement(_.TableRow, null, headers.map(function (header, i) {
        return /*#__PURE__*/_react.default.createElement(_.TableHeader, _extends({
          key: i
        }, getHeaderProps({
          header: header
        })), header.header);
      }))), /*#__PURE__*/_react.default.createElement(_.TableBody, null, rows.map(function (row, i) {
        return /*#__PURE__*/_react.default.createElement(_.TableRow, _extends({
          key: i
        }, getRowProps({
          row: row
        })), row.cells.map(function (cell) {
          return /*#__PURE__*/_react.default.createElement(_.TableCell, {
            key: cell.id
          }, cell.value);
        }));
      }))));
    }
  }));
};

var _default = ToolbarStory;
exports.default = _default;