/**
 * Copyright IBM Corp. 2016, 2020
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */
import ddsSettings from '@carbon/ibmdotcom-utilities/es/utilities/settings/settings';
import Link from '../../internal/vendor/carbon-components-react/components/Link/Link';
import PropTypes from 'prop-types';
import React from 'react';
import settings from 'carbon-components/es/globals/js/settings';
var stablePrefix = ddsSettings.stablePrefix;
var prefix = settings.prefix;
/**
 * Placeholder <li/> element for injection of the TrustE cookie preferences link
 *
 * @param {number} key - the key for the JSX object
 * @returns {*} JSX object
 */

var renderTrusteItem = function renderTrusteItem(key) {
  return React.createElement("li", {
    className: "".concat(prefix, "--legal-nav__list-item"),
    "data-autoid": "".concat(stablePrefix, "--privacy-cp"),
    key: key
  });
};
/**
 * Footer legal nav component.
 */


var LegalNav = function LegalNav(_ref) {
  var links = _ref.links;

  if (!links || !links.length) {
    return null;
  }

  return React.createElement("aside", {
    "data-autoid": "".concat(stablePrefix, "--footer-legal-nav"),
    className: "".concat(prefix, "--legal-nav__container")
  }, React.createElement("nav", {
    className: "".concat(prefix, "--legal-nav")
  }, React.createElement("div", {
    className: "".concat(prefix, "--legal-nav__list")
  }, renderListItems(links))));
};
/**
 * Loops through and renders list items for legal nav
 *
 * @param {Array} links A list of links to be rendered
 * @returns {object} JSX object
 */


function renderListItems(links) {
  var renderedLinks = links.map(function (_ref2, index) {
    var title = _ref2.title,
        url = _ref2.url;

    if (!title || !url) {
      return null;
    }

    return React.createElement("li", {
      className: "".concat(prefix, "--legal-nav__list-item"),
      key: index
    }, React.createElement(Link, {
      "data-autoid": "".concat(stablePrefix, "--footer-legal-nav__link"),
      className: "".concat(prefix, "--footer__link"),
      href: url
    }, title));
  });
  var key = renderedLinks.length + 1;
  renderedLinks.push(renderTrusteItem(key));
  var chunked_arr = [];
  var index = 0;

  while (index < renderedLinks.length) {
    chunked_arr.push(renderedLinks.slice(index, Math.ceil(renderedLinks.length / 3) + index));
    index += Math.ceil(renderedLinks.length / 3);
  }

  return chunked_arr.map(function (elem, index) {
    return React.createElement("ul", {
      className: "".concat(prefix, "--legal-nav__holder"),
      key: index
    }, elem);
  });
}

LegalNav.propTypes = {
  /**
   * A list of links to be rendered.
   */
  links: PropTypes.arrayOf(PropTypes.shape({
    title: PropTypes.string,
    url: PropTypes.string
  }))
};
LegalNav.defaultProps = {
  links: null
};
export default LegalNav;