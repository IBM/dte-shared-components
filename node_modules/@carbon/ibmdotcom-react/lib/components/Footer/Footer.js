"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));

var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));

var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));

var _react = _interopRequireWildcard(require("react"));

var _classnames = _interopRequireDefault(require("classnames"));

var _FeatureFlags = require("../../internal/FeatureFlags");

var _settings = _interopRequireDefault(require("@carbon/ibmdotcom-utilities/lib/utilities/settings/settings"));

var _FooterLogo = _interopRequireDefault(require("./FooterLogo"));

var _FooterNav = _interopRequireDefault(require("./FooterNav"));

var _global = require("@carbon/ibmdotcom-services/lib/services/global/global");

var _LanguageSelector = _interopRequireDefault(require("./LanguageSelector"));

var _LegalNav = _interopRequireDefault(require("./LegalNav"));

var _Locale = _interopRequireDefault(require("@carbon/ibmdotcom-services/lib/services/Locale/Locale"));

var _LocaleButton = _interopRequireDefault(require("./LocaleButton"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _settings2 = _interopRequireDefault(require("carbon-components/umd/globals/js/settings"));

var _Translation = _interopRequireDefault(require("@carbon/ibmdotcom-services/lib/services/Translation/Translation"));

/**
 * Copyright IBM Corp. 2016, 2020
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */
var stablePrefix = _settings.default.stablePrefix;
var prefix = _settings2.default.prefix;
/**
 * Footer component.
 */

var Footer = function Footer(_ref) {
  var type = _ref.type,
      navigation = _ref.navigation,
      langCode = _ref.langCode,
      disableLocaleButton = _ref.disableLocaleButton,
      languageOnly = _ref.languageOnly,
      languageItems = _ref.languageItems,
      languageInitialItem = _ref.languageInitialItem,
      languageCallback = _ref.languageCallback;

  var _useState = (0, _react.useState)([]),
      _useState2 = (0, _slicedToArray2.default)(_useState, 2),
      footerMenuData = _useState2[0],
      setFooterMenuData = _useState2[1];

  var _useState3 = (0, _react.useState)([]),
      _useState4 = (0, _slicedToArray2.default)(_useState3, 2),
      footerLegalData = _useState4[0],
      setFooterLegalData = _useState4[1];

  var _useState5 = (0, _react.useState)(''),
      _useState6 = (0, _slicedToArray2.default)(_useState5, 2),
      displayLang = _useState6[0],
      setDisplayLang = _useState6[1];

  var _useState7 = (0, _react.useState)(''),
      _useState8 = (0, _slicedToArray2.default)(_useState7, 2),
      localeButtonAria = _useState8[0],
      setLocaleButtonAria = _useState8[1];

  (0, _react.useEffect)(function () {
    // initialize global execution calls
    (0, _global.globalInit)();
  }, []);
  (0, _react.useEffect)(function () {
    var stale = false;

    if (!navigation) {
      (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee() {
        var response;
        return _regenerator.default.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                _context.prev = 0;
                _context.next = 3;
                return _Translation.default.getTranslation();

              case 3:
                response = _context.sent;

                if (!stale) {
                  setFooterMenuData(response.footerMenu);
                  setFooterLegalData(response.footerThin);
                }

                _context.next = 10;
                break;

              case 7:
                _context.prev = 7;
                _context.t0 = _context["catch"](0);
                console.error('Error populating footer data:', _context.t0);

              case 10:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, null, [[0, 7]]);
      }))();
    }

    return function () {
      stale = true;
    };
  }, [navigation]);
  (0, _react.useEffect)(function () {
    var stale = false;
    (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee2() {
      var response, locale, list;
      return _regenerator.default.wrap(function _callee2$(_context2) {
        while (1) {
          switch (_context2.prev = _context2.next) {
            case 0:
              _context2.next = 2;
              return _Locale.default.getLangDisplay(langCode);

            case 2:
              response = _context2.sent;

              if (!stale) {
                _context2.next = 5;
                break;
              }

              return _context2.abrupt("return");

            case 5:
              setDisplayLang(response);
              _context2.next = 8;
              return _Locale.default.getLocale();

            case 8:
              locale = _context2.sent;

              if (!stale) {
                _context2.next = 11;
                break;
              }

              return _context2.abrupt("return");

            case 11:
              _context2.next = 13;
              return _Locale.default.getList(locale);

            case 13:
              list = _context2.sent;

              if (!stale) {
                _context2.next = 16;
                break;
              }

              return _context2.abrupt("return");

            case 16:
              setLocaleButtonAria(list.localeModal.headerTitle);

            case 17:
            case "end":
              return _context2.stop();
          }
        }
      }, _callee2);
    }))();
    return function () {
      stale = true;
    };
  }, [langCode]);

  if (navigation) {
    footerMenuData = navigation.footerMenu;
    footerLegalData = navigation.footerThin;
  }

  return _react.default.createElement("footer", {
    "data-autoid": "".concat(stablePrefix, "--footer"),
    className: (0, _classnames.default)("".concat(prefix, "--footer"), (0, _defineProperty2.default)({}, "".concat(prefix, "--footer--short"), type === 'short'))
  }, _react.default.createElement("section", {
    className: "".concat(prefix, "--footer__main")
  }, _react.default.createElement("div", {
    className: "".concat(prefix, "--footer__main-container")
  }, _react.default.createElement(_FooterLogo.default, null), _optionalFooterNav(type, footerMenuData), _loadLocaleLanguage(disableLocaleButton, localeButtonAria, displayLang, languageOnly, languageItems, languageInitialItem, languageCallback))), _react.default.createElement(_LegalNav.default, {
    links: footerLegalData
  }));
};
/**
 * Loads in the locale modal, language selector, or null
 *
 * @param {boolean} disableLocaleButton Flag to disable to locale button
 * @param {string} localeButtonAria String for the aria label
 * @param {string} displayLang display language for locale button
 * @param {boolean} languageOnly Switches to the language selector
 * @param {Array} languageItems Array of language data for the dropdown
 * @param {object} languageInitialItem Initial language selected
 * @param {Function} languageCallback Callback function when language is selected
 * @returns {null|*} JSX or null
 * @private
 */


function _loadLocaleLanguage(disableLocaleButton, localeButtonAria, displayLang, languageOnly, languageItems, languageInitialItem, languageCallback) {
  if (_FeatureFlags.DDS_LANGUAGE_SELECTOR && languageOnly) {
    return _react.default.createElement(_LanguageSelector.default, {
      items: languageItems,
      initialSelectedItem: languageInitialItem,
      callback: languageCallback
    });
  } else if (!disableLocaleButton) {
    return _react.default.createElement(_LocaleButton.default, {
      aria: localeButtonAria,
      displayLang: displayLang
    });
  } else {
    return null;
  }
}
/**
 * renders optional footer nav for tall
 *
 * @param {string} type type of footer in use
 * @param {string} data footer menu data
 * @returns {object} JSX object
 * @private
 */


function _optionalFooterNav(type, data) {
  if (type !== 'short') {
    return _react.default.createElement(_FooterNav.default, {
      groups: data
    });
  }
}

Footer.propTypes = {
  /**
   * Navigation data object for Footer, used for server-side rendering.
   */
  navigation: _propTypes.default.shape({
    footerMenu: _propTypes.default.arrayOf(_propTypes.default.shape({
      title: _propTypes.default.string,
      links: _propTypes.default.arrayOf(_propTypes.default.shape({
        title: _propTypes.default.string,
        url: _propTypes.default.string
      }))
    })),
    footerThin: _propTypes.default.arrayOf(_propTypes.default.shape({
      title: _propTypes.default.string,
      url: _propTypes.default.string
    }))
  }),

  /**
   * Type of Footer. Choose from:
   *
   * | Name    | Description                                                                 |
   * | ------- | --------------------------------------------------------------------------- |
   * | `tall`  | Default footer variant includes additional navigation taking up more space. |
   * | `short` | Short footer variant reduces space by removing any additional navigation.   |
   */
  type: _propTypes.default.oneOf(['tall', 'short']),

  /**
   * Language code for fetching the display name.
   */
  langCode: _propTypes.default.shape({
    cc: _propTypes.default.string,
    lc: _propTypes.default.string
  }),

  /**
   * `true` to disable the Locale button.
   */
  disableLocaleButton: _propTypes.default.bool,

  /**
   * `true` to switch the locale button with a language dropdown (experimental).
   */
  languageOnly: _propTypes.default.bool,

  /**
   * Array of items for the language dropdown,
   * utilizes the [Carbon ComboBox](https://react.carbondesignsystem.com/?path=/story/combobox--default) (experimental).
   */
  languageItems: _propTypes.default.arrayOf(_propTypes.default.object),

  /**
   * Sets the initial value when the component is loaded (experimental).
   * The default is the first item.
   */
  languageInitialItem: _propTypes.default.shape({
    id: _propTypes.default.string,
    text: _propTypes.default.string
  }),

  /**
   * Callback function onChange of the language dropdown (experimental).
   */
  languageCallback: _propTypes.default.func
};
/**
 * @property {object} defaultProps default Footer props
 * @type {{navigation: null, langCode: null, disableLocaleButton: boolean,
 * type: string}}
 */

Footer.defaultProps = {
  navigation: null,
  type: 'full',
  langCode: null,
  disableLocaleButton: false,
  languageOnly: false,
  languageItems: [],
  languageCallback: function languageCallback() {}
};
var _default = Footer;
exports.default = _default;