"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _settings = _interopRequireDefault(require("@carbon/ibmdotcom-utilities/lib/utilities/settings/settings"));

var _Link = _interopRequireDefault(require("../../internal/vendor/carbon-components-react/components/Link/Link"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireDefault(require("react"));

var _settings2 = _interopRequireDefault(require("carbon-components/umd/globals/js/settings"));

/**
 * Copyright IBM Corp. 2016, 2020
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */
var stablePrefix = _settings.default.stablePrefix;
var prefix = _settings2.default.prefix;
/**
 * Placeholder <li/> element for injection of the TrustE cookie preferences link
 *
 * @param {number} key - the key for the JSX object
 * @returns {*} JSX object
 */

var renderTrusteItem = function renderTrusteItem(key) {
  return _react.default.createElement("li", {
    className: "".concat(prefix, "--legal-nav__list-item"),
    "data-autoid": "".concat(stablePrefix, "--privacy-cp"),
    key: key
  });
};
/**
 * Footer legal nav component.
 */


var LegalNav = function LegalNav(_ref) {
  var links = _ref.links;

  if (!links || !links.length) {
    return null;
  }

  return _react.default.createElement("aside", {
    "data-autoid": "".concat(stablePrefix, "--footer-legal-nav"),
    className: "".concat(prefix, "--legal-nav__container")
  }, _react.default.createElement("nav", {
    className: "".concat(prefix, "--legal-nav")
  }, _react.default.createElement("div", {
    className: "".concat(prefix, "--legal-nav__list")
  }, renderListItems(links))));
};
/**
 * Loops through and renders list items for legal nav
 *
 * @param {Array} links A list of links to be rendered
 * @returns {object} JSX object
 */


function renderListItems(links) {
  var renderedLinks = links.map(function (_ref2, index) {
    var title = _ref2.title,
        url = _ref2.url;

    if (!title || !url) {
      return null;
    }

    return _react.default.createElement("li", {
      className: "".concat(prefix, "--legal-nav__list-item"),
      key: index
    }, _react.default.createElement(_Link.default, {
      "data-autoid": "".concat(stablePrefix, "--footer-legal-nav__link"),
      className: "".concat(prefix, "--footer__link"),
      href: url
    }, title));
  });
  var key = renderedLinks.length + 1;
  renderedLinks.push(renderTrusteItem(key));
  var chunked_arr = [];
  var index = 0;

  while (index < renderedLinks.length) {
    chunked_arr.push(renderedLinks.slice(index, Math.ceil(renderedLinks.length / 3) + index));
    index += Math.ceil(renderedLinks.length / 3);
  }

  return chunked_arr.map(function (elem, index) {
    return _react.default.createElement("ul", {
      className: "".concat(prefix, "--legal-nav__holder"),
      key: index
    }, elem);
  });
}

LegalNav.propTypes = {
  /**
   * A list of links to be rendered.
   */
  links: _propTypes.default.arrayOf(_propTypes.default.shape({
    title: _propTypes.default.string,
    url: _propTypes.default.string
  }))
};
LegalNav.defaultProps = {
  links: null
};
var _default = LegalNav;
exports.default = _default;